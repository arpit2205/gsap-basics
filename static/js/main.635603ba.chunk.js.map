{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","app","useRef","circleBlue","circleRed","circleYellow","useEffect","TweenMax","to","css","visibility","staggerFrom","opacity","x","ease","Power3","easeOut","ref","el","className","onMouseEnter","height","width","onMouseLeave","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA6EeA,MAxEf,WACE,IAAIC,EAAMC,iBAAO,MACbC,EAAaD,iBAAO,MACpBE,EAAYF,iBAAO,MACnBG,EAAeH,iBAAO,MA8C1B,OAxBAI,qBAAU,WACRC,IAASC,GAAGP,EAAK,EAAG,CAAEQ,IAAK,CAAEC,WAAY,aAezCH,IAASI,YACP,CAACR,EAAYC,EAAWC,GACxB,GACA,CAAEO,QAAS,EAAGC,EAAG,GAAIC,KAAMC,IAAOC,SAClC,MAED,IAGD,qBAAKC,IAAK,SAACC,GAAD,OAASjB,EAAMiB,GAAKC,UAAU,MAAxC,SACE,wBAAQA,UAAU,aAAlB,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKF,IAAK,SAACC,GAAD,OAASf,EAAae,GAAKC,UAAU,WAC/C,qBACEF,IAAK,SAACC,GAAD,OAASd,EAAYc,GAE1BE,aAlDW,WACnBb,IAASC,GAAGJ,EAAW,GAAK,CAC1BiB,OAAQ,IACRC,MAAO,IACPR,KAAMC,IAAOC,WA+CPO,aA1CW,WACnBhB,IAASC,GAAGJ,EAAW,GAAK,CAC1BiB,OAAQ,GACRC,MAAO,GACPR,KAAMC,IAAOC,WAuCPG,UAAU,eAEZ,qBACEF,IAAK,SAACC,GAAD,OAASb,EAAea,GAC7BC,UAAU,0BCzDPK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.635603ba.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport { TweenMax, Power3 } from \"gsap\";\n\nfunction App() {\n  let app = useRef(null);\n  let circleBlue = useRef(null);\n  let circleRed = useRef(null);\n  let circleYellow = useRef(null);\n\n  // let [state, setState] = useState(false);\n\n  const handleExpand = () => {\n    TweenMax.to(circleRed, 0.8, {\n      height: 200,\n      width: 200,\n      ease: Power3.easeOut,\n    });\n    // setState(true);\n  };\n\n  const handleShrink = () => {\n    TweenMax.to(circleRed, 0.8, {\n      height: 75,\n      width: 75,\n      ease: Power3.easeOut,\n    });\n    // setState(false);\n  };\n\n  useEffect(() => {\n    TweenMax.to(app, 0, { css: { visibility: \"visible\" } });\n    // TweenMax.from(circleBlue, 0.8, { opacity: 0, x: 40, ease: Power3.easeOut });\n    // TweenMax.from(circleRed, 0.8, {\n    //   opacity: 0,\n    //   x: 40,\n    //   ease: Power3.easeOut,\n    //   delay: 0.2,\n    // });\n    // TweenMax.from(circleYellow, 0.8, {\n    //   opacity: 0,\n    //   x: 40,\n    //   ease: Power3.easeOut,\n    //   delay: 0.4,\n    // });\n\n    TweenMax.staggerFrom(\n      [circleBlue, circleRed, circleYellow],\n      0.8,\n      { opacity: 0, x: 40, ease: Power3.easeOut },\n      0.2\n    );\n  }, []);\n\n  return (\n    <div ref={(el) => (app = el)} className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"circle-container\">\n          <div ref={(el) => (circleBlue = el)} className=\"circle\"></div>\n          <div\n            ref={(el) => (circleRed = el)}\n            // onClick={state ? handleShrink : handleExpand}\n            onMouseEnter={handleExpand}\n            onMouseLeave={handleShrink}\n            className=\"circle red\"\n          ></div>\n          <div\n            ref={(el) => (circleYellow = el)}\n            className=\"circle yellow\"\n          ></div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}